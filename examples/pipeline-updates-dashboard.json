{
  "name": "Databricks Pipeline Updates",
  "description": null,
  "permissions": "PUBLIC_READ_WRITE",
  "pages": [
    {
      "name": "Pipeline Updates",
      "description": null,
      "widgets": [
        {
          "title": "Pipelines running",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 4,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT latest(databricks.pipeline.pipelines) AS 'Pipelines'\nWHERE databricksPipelineState = 'RUNNING'"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Pipelines failed",
          "layout": {
            "column": 5,
            "row": 1,
            "width": 4,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT latest(databricks.pipeline.pipelines) AS 'Pipelines'\nWHERE databricksPipelineState = 'FAILED'"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Pipelines idle",
          "layout": {
            "column": 9,
            "row": 1,
            "width": 4,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT latest(databricks.pipeline.pipelines) AS 'Pipelines'\nWHERE databricksPipelineState = 'IDLE'"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Updates running",
          "layout": {
            "column": 1,
            "row": 3,
            "width": 2,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT latest(databricks.pipeline.updates) AS 'Updates'\nWHERE databricksPipelineUpdateStatus = 'RUNNING'"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Updates waiting for resources",
          "layout": {
            "column": 3,
            "row": 3,
            "width": 2,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT latest(databricks.pipeline.updates) AS 'Updates'\nWHERE databricksPipelineUpdateStatus = 'WAITING_FOR_RESOURCES'"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Updates setting up tables",
          "layout": {
            "column": 5,
            "row": 3,
            "width": 2,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT latest(databricks.pipeline.updates) AS 'Updates'\nWHERE databricksPipelineUpdateStatus = 'SETTING_UP_TABLES'"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Updates completed",
          "layout": {
            "column": 7,
            "row": 3,
            "width": 2,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT sum(databricks.pipeline.updates) AS 'Updates'\nWHERE databricksPipelineUpdateStatus = 'COMPLETED'\nLIMIT MAX"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Updates failed",
          "layout": {
            "column": 9,
            "row": 3,
            "width": 2,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT sum(databricks.pipeline.updates) AS 'Updates'\nWHERE databricksPipelineUpdateStatus = 'FAILED'\nLIMIT MAX"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Updates canceled",
          "layout": {
            "column": 11,
            "row": 3,
            "width": 2,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT sum(databricks.pipeline.updates) AS 'Updates'\nWHERE databricksPipelineUpdateStatus = 'CANCELED'\nLIMIT MAX"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Recent updates",
          "layout": {
            "column": 1,
            "row": 5,
            "width": 12,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "name": "Duration",
                "type": "humanized"
              }
            ],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT databricksPipelineName AS Pipeline, substring(databricksPipelineUpdateId, 0, 6) AS Update, databricksPipelineUpdateStatus as Status, getField(databricks.pipeline.update.duration, latest) / 1000 AS Duration\nWHERE databricks.pipeline.update.duration IS NOT NULL\n AND databricksPipelineUpdateStatus IN ('COMPLETED', 'CANCELED', 'FAILED')\nLIMIT MAX "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Average update duration by pipeline and status",
          "layout": {
            "column": 1,
            "row": 8,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "markers": {
              "displayedTypes": {
                "criticalViolations": false,
                "deployments": true,
                "relatedDeployments": true,
                "warningViolations": false
              }
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT average(databricks.pipeline.update.duration) / 1000 AS 'seconds'\nWHERE databricksPipelineUpdateStatus IN ('COMPLETED', 'CANCELED', 'FAILED')\nFACET databricksPipelineName, databricksPipelineUpdateStatus\nTIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "thresholds": {
              "isLabelVisible": true
            },
            "units": {
              "unit": "SECONDS"
            },
            "yAxisLeft": {
              "zero": true
            },
            "yAxisRight": {
              "zero": true
            }
          }
        },
        {
          "title": "Average update wait time by pipeline and status",
          "layout": {
            "column": 5,
            "row": 8,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "markers": {
              "displayedTypes": {
                "criticalViolations": false,
                "deployments": true,
                "relatedDeployments": true,
                "warningViolations": false
              }
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT average(databricks.pipeline.update.duration.wait) / 1000 AS 'seconds'\nWHERE databricksPipelineUpdateStatus IN ('COMPLETED', 'CANCELED', 'FAILED')\nFACET databricksPipelineName, databricksPipelineUpdateStatus\nTIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "thresholds": {
              "isLabelVisible": true
            },
            "units": {
              "unit": "SECONDS"
            },
            "yAxisLeft": {
              "zero": true
            },
            "yAxisRight": {
              "zero": true
            }
          }
        },
        {
          "title": "Average update run time by pipeline and status",
          "layout": {
            "column": 9,
            "row": 8,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "markers": {
              "displayedTypes": {
                "criticalViolations": false,
                "deployments": true,
                "relatedDeployments": true,
                "warningViolations": false
              }
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT average(databricks.pipeline.update.runTime) / 1000 AS 'seconds'\nWHERE databricksPipelineUpdateStatus IN ('COMPLETED', 'CANCELED', 'FAILED')\nFACET databricksPipelineName, databricksPipelineUpdateStatus\nTIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "thresholds": {
              "isLabelVisible": true
            },
            "units": {
              "unit": "SECONDS"
            },
            "yAxisLeft": {
              "zero": true
            },
            "yAxisRight": {
              "zero": true
            }
          }
        },
        {
          "title": "Recent flows",
          "layout": {
            "column": 1,
            "row": 11,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "name": "Duration",
                "type": "humanized"
              }
            ],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT databricksPipelineName AS Pipeline, substring(databricksPipelineUpdateId, 0, 6) AS Update, databricksPipelineFlowName AS Flow, databricksPipelineFlowStatus AS Status, getField(databricks.pipeline.flow.duration, latest) / 1000 AS Duration\nWHERE databricks.pipeline.flow.duration IS NOT NULL\n AND databricksPipelineFlowStatus IN ('COMPLETED', 'STOPPED', 'SKIPPED', 'FAILED', 'EXCLUDED')\nLIMIT MAX\n"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Average flow duration by pipeline, flow, and status",
          "layout": {
            "column": 1,
            "row": 15,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "markers": {
              "displayedTypes": {
                "criticalViolations": false,
                "deployments": true,
                "relatedDeployments": true,
                "warningViolations": false
              }
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT average(databricks.pipeline.flow.duration) / 1000 AS 'seconds'\nWHERE databricksPipelineFlowStatus IN ('COMPLETED', 'STOPPED', 'SKIPPED', 'FAILED', 'EXCLUDED')\nFACET databricksPipelineName, databricksPipelineFlowName, databricksPipelineFlowStatus\nTIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "thresholds": {
              "isLabelVisible": true
            },
            "units": {
              "unit": "SECONDS"
            },
            "yAxisLeft": {
              "zero": true
            },
            "yAxisRight": {
              "zero": true
            }
          }
        },
        {
          "title": "Average flow queue time by pipeline, flow, and status",
          "layout": {
            "column": 5,
            "row": 15,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "markers": {
              "displayedTypes": {
                "criticalViolations": false,
                "deployments": true,
                "relatedDeployments": true,
                "warningViolations": false
              }
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT average(databricks.pipeline.flow.duration.queue) / 1000 AS 'seconds'\nWHERE databricksPipelineFlowStatus IN ('COMPLETED', 'STOPPED', 'SKIPPED', 'FAILED', 'EXCLUDED')\nFACET databricksPipelineName, databricksPipelineFlowName, databricksPipelineFlowStatus\nTIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "thresholds": {
              "isLabelVisible": true
            },
            "units": {
              "unit": "SECONDS"
            },
            "yAxisLeft": {
              "zero": true
            },
            "yAxisRight": {
              "zero": true
            }
          }
        },
        {
          "title": "Average flow planning time by pipeline, flow, and status",
          "layout": {
            "column": 9,
            "row": 15,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "markers": {
              "displayedTypes": {
                "criticalViolations": false,
                "deployments": true,
                "relatedDeployments": true,
                "warningViolations": false
              }
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT average(databricks.pipeline.flow.duration.plan) / 1000 AS 'seconds'\nWHERE databricksPipelineFlowStatus IN ('COMPLETED', 'STOPPED', 'SKIPPED', 'FAILED', 'EXCLUDED')\nFACET databricksPipelineName, databricksPipelineFlowName, databricksPipelineFlowStatus\nTIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "thresholds": {
              "isLabelVisible": true
            },
            "units": {
              "unit": "SECONDS"
            },
            "yAxisLeft": {
              "zero": true
            },
            "yAxisRight": {
              "zero": true
            }
          }
        },
        {
          "title": "Average records written by pipeline and flow",
          "layout": {
            "column": 1,
            "row": 22,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.bar"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT average(databricks.pipeline.flow.rowsWritten)\nFACET databricksPipelineName, databricksPipelineFlowName"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Average records dropped by pipeline and flow",
          "layout": {
            "column": 7,
            "row": 22,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.bar"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT average(databricks.pipeline.flow.recordsDropped)\nFACET databricksPipelineName, databricksPipelineFlowName"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Average backlog bytes by pipeline and flow",
          "layout": {
            "column": 1,
            "row": 25,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.bar"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT average(databricks.pipeline.flow.backlogBytes)\nFACET databricksPipelineName, databricksPipelineFlowName"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Average backlog files by pipeline and flow",
          "layout": {
            "column": 7,
            "row": 25,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.bar"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT average(databricks.pipeline.flow.backlogFiles)\nFACET databricksPipelineName, databricksPipelineFlowName"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Expectation records passed",
          "layout": {
            "column": 1,
            "row": 28,
            "width": 6,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "name": "Records",
                "type": "humanized"
              }
            ],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT databricksPipelineName AS Pipeline, substring(databricksPipelineUpdateId, 0, 6) AS Update, databricksPipelineFlowName AS Flow, databricksPipelineFlowExpectationName AS Expectation, getField(databricks.pipeline.flow.expectation.recordsPassed, latest) AS Records\nWHERE databricks.pipeline.flow.expectation.recordsPassed IS NOT NULL\nLIMIT MAX\n "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Expectation records failed",
          "layout": {
            "column": 7,
            "row": 28,
            "width": 6,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "name": "Records",
                "type": "humanized"
              }
            ],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "FROM Metric\nSELECT databricksPipelineName AS Pipeline, substring(databricksPipelineUpdateId, 0, 6) AS Update, databricksPipelineFlowName AS Flow, databricksPipelineFlowExpectationName AS Expectation, getField(databricks.pipeline.flow.expectation.recordsFailed, latest) AS Records\nWHERE databricks.pipeline.flow.expectation.recordsFailed IS NOT NULL\nLIMIT MAX\n "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        }
      ]
    },
    {
      "name": "Spark Metrics",
      "description": null,
      "widgets": [
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 2,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "## Important Notes\n* The charts on this page will populate only if the Databricks Integration is able to [map Spark metrics to pipeline data](https://github.com/newrelic/newrelic-databricks-integration?tab=readme-ov-file#mapping-spark-metrics-to-databricks-jobs-and-pipelines) and the [`includePipelineUpdateId`](https://github.com/newrelic/newrelic-databricks-integration?tab=readme-ov-file#spark-databricks-includepipelineupdateid) configuration parameter is set to `true`.\n* Click on the links in the \"Databricks Link\" column to navigate to the associated pipeline update in the Databricks UI."
          }
        },
        {
          "title": "Spark jobs by pipeline update",
          "layout": {
            "column": 3,
            "row": 1,
            "width": 10,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "name": "Spark Job ID",
                "precision": 0,
                "type": "humanized"
              },
              {
                "name": "Duration",
                "precision": 2,
                "type": "humanized"
              }
            ],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "WITH\n concat(databricksWorkspaceUrl, '/pipelines/', databricksPipelineId) AS databricksPipelineUrl,\n substring(databricksPipelineUpdateId, 0, 6) as update\nFROM Metric\nSELECT\n databricksWorkspaceName AS Workspace,\n sparkAppName AS 'Spark App Name',\n sparkAppJobId AS 'Spark Job ID',\n getField(spark.app.job.duration, latest) / 1000 AS Duration,\n databricksPipelineId AS 'Pipeline ID',\n update as 'Update',\n databricksPipelineUrl AS 'Databricks Link'\nWHERE metricName = 'spark.app.job.duration' AND databricksPipelineId IS NOT NULL AND databricksPipelineUpdateId IS NOT NULL\nLIMIT MAX "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Spark stages by pipeline update",
          "layout": {
            "column": 1,
            "row": 5,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "name": "Duration",
                "precision": 2,
                "type": "humanized"
              },
              {
                "name": "Spark Job",
                "precision": 0,
                "type": "humanized"
              }
            ],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "WITH\n concat(databricksWorkspaceUrl, '/pipelines/', databricksPipelineId) AS databricksPipelineUrl,\n substring(databricksPipelineUpdateId, 0, 6) as update\nFROM Metric\nSELECT\n databricksWorkspaceName AS Workspace,\n sparkAppName AS 'Spark App Name',\n sparkAppStageName AS 'Spark Stage Name',\n getField(spark.app.stage.duration, latest) / 1000 AS Duration,\n databricksPipelineId AS 'Pipeline ID',\n update as 'Update',\n databricksPipelineUrl AS 'Databricks Link'\nWHERE metricName = 'spark.app.stage.duration' AND databricksPipelineId IS NOT NULL AND databricksPipelineUpdateId IS NOT NULL\nLIMIT MAX "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Spark tasks by pipeline update",
          "layout": {
            "column": 1,
            "row": 9,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "name": "Duration",
                "precision": 2,
                "type": "humanized"
              },
              {
                "name": "Spark Job",
                "precision": 0,
                "type": "humanized"
              }
            ],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountIds": [
                  0
                ],
                "query": "WITH\n concat(databricksWorkspaceUrl, '/pipelines/', databricksPipelineId) AS databricksPipelineUrl,\n substring(databricksPipelineUpdateId, 0, 6) as update\nFROM Metric\nSELECT\n databricksWorkspaceName AS Workspace,\n sparkAppName AS 'Spark App Name',\n sparkAppStageName AS 'Spark Stage Name',\n sparkAppTaskId AS 'Spark Task ID',\n getField(spark.app.stage.task.duration, latest) / 1000 AS Duration,\n databricksPipelineId AS 'Pipeline ID',\n update as 'Update',\n databricksPipelineUrl AS 'Databricks Link'\nWHERE metricName = 'spark.app.stage.task.duration' AND databricksPipelineId IS NOT NULL AND databricksPipelineUpdateId IS NOT NULL\nLIMIT MAX "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        }
      ]
    }
  ],
  "variables": []
}
